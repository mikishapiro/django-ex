apiVersion: v1
kind: Template
metadata:
  name: django-psql-example-ci
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      description: Keeps track of changes in the application image
      openshift.io/generated-by: OpenShiftNewApp
    generation: 1
    labels:
      app: django-psql-example
      template: django-psql-example
    name: django-psql-example
  spec:
    lookupPolicy:
      local: false
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the application server
      openshift.io/generated-by: OpenShiftNewApp
      template.alpha.openshift.io/wait-for-ready: "true"
    generation: 1
    labels:
      app: django-psql-example
      template: django-psql-example
    name: django-psql-example
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      name: django-psql-example
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        labels:
          name: django-psql-example
        name: django-psql-example
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: example
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: django-psql-example
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: django-psql-example
          - name: APP_CONFIG
          - name: DJANGO_SECRET_KEY
            valueFrom:
              secretKeyRef:
                key: django-secret-key
                name: django-psql-example
          image: docker-registry.default.svc:5000/django-psql-example-prototype/django-psql-example@sha256:a87b0a093cb712faf450e3a4c9ddebec3522b92cccfef08579764f08ab79f780
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: django-psql-example
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - django-psql-example
        from:
          kind: ImageStreamTag
          name: django-psql-example:latest
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the database
      openshift.io/generated-by: OpenShiftNewApp
      template.alpha.openshift.io/wait-for-ready: "true"
    generation: 1
    labels:
      app: django-psql-example
      template: django-psql-example
    name: postgresql
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      name: postgresql
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        labels:
          name: postgresql
        name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: django-psql-example
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: django-psql-example
          - name: POSTGRESQL_DATABASE
            value: example
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:4931da33453eec1b03fdfe716474cdd02d4bbb1917a6d848c1d6dcd357d6b6a4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U ${POSTGRESQL_USER} -q -d ${POSTGRESQL_DATABASE}
                -c 'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: data
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - postgresql
        from:
          kind: ImageStreamTag
          name: postgresql:9.5
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      description: Defines how to build the application
      openshift.io/generated-by: OpenShiftNewApp
      template.alpha.openshift.io/wait-for-ready: "true"
    labels:
      app: django-psql-example
      template: django-psql-example
    name: django-psql-example
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: {}
    output:
      to:
        kind: ImageStreamTag
        name: django-psql-example:latest
    postCommit:
      script: ./manage.py test
    resources: {}
    runPolicy: SerialLatestOnly
    source:
      git:
        uri: https://bitbucket.org/mikishapiro/django-ex.git
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: PIP_INDEX_URL
        from:
          kind: ImageStreamTag
          name: python:3.5
          namespace: openshift
      type: Source
    successfulBuildsHistoryLimit: 5
    triggers:
    - imageChange: {}
      type: ImageChange
    - type: ConfigChange
    - github:
        secret: AAhMLHoFx0wxeLje6tWpIXAl0sgwqbswy01KjeDo
      type: GitHub
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes and load balances the application pods
      openshift.io/generated-by: OpenShiftNewApp
      service.alpha.openshift.io/dependencies: '[{"name": "postgresql", "kind": "Service"}]'
    labels:
      app: django-psql-example
      template: django-psql-example
    name: django-psql-example
  spec:
    ports:
    - name: web
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      name: django-psql-example
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes the database server
      openshift.io/generated-by: OpenShiftNewApp
    labels:
      app: django-psql-example
      template: django-psql-example
    name: postgresql
  spec:
    ports:
    - name: postgresql
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      name: postgresql
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      openshift.io/host.generated: "true"
    labels:
      app: django-psql-example
      template: django-psql-example
    name: django-psql-example
  spec:
    to:
      kind: Service
      name: django-psql-example
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  data:
    database-password: ZHVtbXlwYXNzd29yZA==
    database-user: YWRtaW4=
    django-secret-key: QlhQY1lZeDlfWjJhRnlkODRIVEpacWdjTXZnQzJnZ2JGMTFEU0JHYkFTS2xKTkVEMmM=
  kind: Secret
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    labels:
      app: django-psql-example
      template: django-psql-example
    name: django-psql-example
  type: Opaque
parameters:
- description: The name assigned to all of the frontend objects defined in this template.
  displayName: Name
  name: NAME
  required: true
  value: django-psql-example
- description: The OpenShift Namespace where the ImageStream resides.
  displayName: Namespace
  name: NAMESPACE
  required: true
  value: openshift
- description: Maximum amount of memory the Django container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  required: true
  value: 512Mi
- description: Maximum amount of memory the PostgreSQL container can use.
  displayName: Memory Limit (PostgreSQL)
  name: MEMORY_POSTGRESQL_LIMIT
  required: true
  value: 512Mi
- description: The URL of the repository with your application source code.
  displayName: Git Repository URL
  name: SOURCE_REPOSITORY_URL
  required: true
  value: https://github.com/openshift/django-ex.git
- description: Set this to a branch name, tag or other ref of your repository if you
    are not using the default branch.
  displayName: Git Reference
  name: SOURCE_REPOSITORY_REF
- description: Set this to the relative path to your project if it is not in the root
    of your repository.
  displayName: Context Directory
  name: CONTEXT_DIR
- description: The exposed hostname that will route to the Django service, if left
    blank a value will be defaulted.
  displayName: Application Hostname
  name: APPLICATION_DOMAIN
- description: Github trigger secret.  A difficult to guess string encoded as part
    of the webhook URL.  Not encrypted.
  displayName: GitHub Webhook Secret
  from: '[a-zA-Z0-9]{40}'
  generate: expression
  name: GITHUB_WEBHOOK_SECRET
- displayName: Database Service Name
  name: DATABASE_SERVICE_NAME
  required: true
  value: postgresql
- description: 'Database engine: postgresql, mysql or sqlite (default).'
  displayName: Database Engine
  name: DATABASE_ENGINE
  required: true
  value: postgresql
- displayName: Database Name
  name: DATABASE_NAME
  required: true
  value: default
- displayName: Database Username
  name: DATABASE_USER
  required: true
  value: django
- displayName: Database User Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: DATABASE_PASSWORD
- description: Relative path to Gunicorn configuration file (optional).
  displayName: Application Configuration File Path
  name: APP_CONFIG
- description: Set this to a long random string.
  displayName: Django Secret Key
  from: '[\w]{50}'
  generate: expression
  name: DJANGO_SECRET_KEY
- description: The custom PyPi index URL
  displayName: Custom PyPi Index URL
  name: PIP_INDEX_URL
